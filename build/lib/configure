#!/bin/sh

# Time-stamp: <06/01/14 01:20:48 ptr>
# $Id$


configmak=../Makefiles/config.mak

# rm -f ${configmak}

# echo "# STLPORT_DIR := /export/home/windows/guest/STLlab/STLport" >> ${configmak}
# echo "# TARGET_PROC=x86" >> ${configmak}

write_option() {
  target=`echo $1 | sed -e 's/^[^=]*=//'`
  echo $2 := $target >> ${configmak}
}

print_help() {
  cat <<EOF
Configuration utility.

Usage:

  configure [options]

Available options:

  --target=<target>     Target platform (cross-compiling)

  --help                Print this help message and exit

  --with-stlport=<dir>  use STLport in catalog <dir>

  --with-mwcw=<dir>     Metrowerks CodeWarrior compiler catalog (useful for mw* compilers)
                        i.e. something like "c:/Program Files/Metrowerks/CodeWarrior"

  --with-nwsdk=<dir>    Use Novell NDK/SDK from this catalog (useful for *-*-netware target)
                        i.e. something like "c:/Novell/ndk/nwsdk"

  --no-cygwin           Specific cygwin distribution option. Use it to build STLport using
                        the cygwin tools but without dependency on the cygwin1.dll

  --with-extra-cxxflags=<options>
                        Pass extra options to C++ compiler

  --not-thread-safe     Per default STLport libraries are built in order to be usable in a multithreaded
                        context. If you don't need this you can ask for a not thread safe version with
                        this option.

  --with-boost=<dir>    Request use of boost support (www.boost.org). For the moment only the boost
                        type_traits library is used to get type information and to implement some
                        specific workaround not directly implemented by STLport. To use the same
                        support using STLport don't forget to define _STLP_USE_BOOST_SUPPORT in
                        stlport/stl/config/user_config.h file.

  --clean               remove custom settings (file ${configmak})
                        and use default values

EOF
}

case $# in
  0)
    exit 0
    ;;
esac

case $1 in
  --help)
    print_help
    exit 0
    ;;
esac

rm -f ${configmak}

while :
do
  case $# in
    0)
      break
      ;;
  esac
  option=$1
  shift
  case $option in
    --clean)
      rm -f ${configmak}
      echo Configuration file removed.
      ;; 
    --target=*)
      write_option "$option" TARGET_OS
      ;;
    --with-stlport=*)
      write_option "$option" STLPORT_DIR
      ;;
    --with-extra-cxxflags=*)
      write_option "$option" EXTRA_CXXFLAGS
      ;;
    --with-nwsdk=*)
      write_option "$option" NWSDK_DIR
      ;;
    --with-mwcw=*)
      write_option "$option" MWCW_BASE
      ;;
    --no-cygwin)
      write_option "-mno-cygwin" OPT
      write_option -D_STLP_NO_CYGWIN DEFS
      echo "--no-cygwin: Don't forget to uncomment _STLP_NO_CYGWIN macro"
      echo "in stlport/stl/_site_config.h to use such a configuration."
      ;;
    --not-thread-safe)
      write_option 1 STLP_BUILD_NO_THREAD
      ;;
    --use-boost=*)
      echo Setting config to use boost library
      write_option "$option" STLP_BUILD_BOOST_PATH
      ;;
  esac
done

