This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

configure:601: checking for c++
configure:632: checking whether the C++ compiler (CC  ) works
configure:646: CC -o conftest    conftest.C  1>&5
configure:672: checking whether the C++ compiler (CC  ) is a cross-compiler
configure:677: checking whether we are using GNU C++
configure:686: CC -E conftest.C
configure:740: checking size of int
configure:762: CC -o conftest -g   conftest.cpp  1>&5
configure:901: checking for basic STL compatibility
configure:925: CC -o conftest -g   conftest.cpp  1>&5
configure:940: checking for partial specialization syntax
configure:951: CC -o conftest -g   conftest.cpp  1>&5
configure:967: checking for bool keyword
configure:976: CC -c -g  conftest.cpp 1>&5
configure:1045: checking for wchar_t type
configure:1055: CC -c -g  conftest.cpp 1>&5
configure:1071: checking if wchar_t is unsigned short
configure:1088: CC -c -g  conftest.cpp 1>&5
configure:1104: checking for long long type
configure:1113: CC -c -g  conftest.cpp 1>&5
configure:1129: checking for long double type
configure:1138: CC -c -g  conftest.cpp 1>&5
configure:1154: checking for typename keyword
configure:1190: CC -o conftest -g   conftest.cpp  1>&5
configure:1209: checking for explicit keyword
configure:1220: CC -c -g  conftest.cpp 1>&5
configure:1236: checking for mutable keyword
configure:1247: CC -c -g  conftest.cpp 1>&5
configure:1263: checking for new style casts
configure:1278: CC -c -g  conftest.cpp 1>&5
configure:1294: checking for new-style C library headers
configure:1314: CC -c -g  conftest.cpp 1>&5
configure:1330: checking for new-style <new> header
configure:1341: CC -c -g  conftest.cpp 1>&5
configure:1358: checking for member template methods
configure:1376: CC -o conftest -g   conftest.cpp  1>&5
configure:1393: checking for friend templates
configure:1412: CC -o conftest -g   conftest.cpp  1>&5
configure:1429: checking for qualified friend templates
configure:1452: CC -o conftest -g   conftest.cpp  1>&5
configure:1469: checking for member template keyword
configure:1494: CC -o conftest -g   conftest.cpp  1>&5
configure:1555: checking for partial class specialization
configure:1584: CC -o conftest -g   conftest.cpp  1>&5
configure:1603: checking if explicit args accepted on constructors of partial specialized classes
configure:1635: CC -o conftest -g   conftest.cpp  1>&5
"configure", line 1631: Error: foo is not a member of ps_foo<int*, int>.
1 Error(s) detected.
configure: failed program was:
#line 1605 "configure"
#include "confdefs.h"

template <class Arg,class Result>
struct ps_foo {
    typedef Arg argument_type;
    typedef Result result_type;
};   

template<class Result>
struct ps_foo<Result*,Result*> {
	ps_foo<Result*,Result*>() {}
	void bar() {}
};

template<class Result>
struct ps_foo<int*,Result> {
	ps_foo<int*,Result*>() {}
	void bar() {}

};

ps_foo<char*, char*> p;
ps_foo<int*, int> p1;

int main() {
p.bar();
 p1.foo();
; return 0; }
configure:1656: checking if explicit args accepted on constructors of explicitly specialized classes
configure:1682: CC -o conftest -g   conftest.cpp  1>&5
"configure", line 1667: Error: Partial specialization parameter Result is not used in the arguments.
"configure", line 1678: Error: foo is not a member of ps_foo<int*, int>.
2 Error(s) detected.
configure: failed program was:
#line 1658 "configure"
#include "confdefs.h"

template <class Arg,class Result>
struct ps_foo {
    typedef Arg argument_type;
    typedef Result result_type;
    void bar() {}	
};   

template<class Result>
struct ps_foo<int*,int> {
	ps_foo<Result*,Result*>() {}
	void foo() {}
};

ps_foo<char*, char*> p;
ps_foo<int*, int> p1;

int main() {
p.bar();
 p1.foo();
; return 0; }
configure:1701: checking for partial template function ordering
configure:1725: CC -o conftest -g   conftest.cpp  1>&5
configure:1742: checking for method specialization
configure:1767: CC -o conftest -g   conftest.cpp  1>&5
"configure", line 1756: Warning (Anachronism): Old explicit specialization syntax.
1 Warning(s) detected.
configure:1784: checking for lrand48 function
configure:1793: CC -o conftest -g   conftest.cpp  1>&5
configure:1810: checking for default template parameters
configure:1823: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
configure:1887: checking for default non-type parameters
configure:1908: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
configure:1925: checking for non-type parameter bug
configure:1950: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
configure:1967: checking for static data member templates
configure:1977: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
configure:2021: checking for static array member size bug
configure:2031: CC -o conftest -g   conftest.cpp  1>&5
"configure", line 2025: Error: An array must have at least one element.
1 Error(s) detected.
configure: failed program was:
#line 2023 "configure"
#include "confdefs.h"
template <class T> struct Class { enum { sz=5 }; static int a[sz]; };
     template <class T> int Class<T>::a[Class<T>::sz];
int main() {

; return 0; }
configure:2048: checking for static data member const initializer bug
configure:2058: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
__1c2e4CiiB_6FrknFClass3CTACi__3_i_ is out-of-date and will be regenerated
configure:2074: checking for namespaces support
configure:2094: CC -c -g  conftest.cpp 1>&5
configure:2110: checking for broken using directive
configure:2127: CC -c -g  conftest.cpp 1>&5
configure:2184: checking for exceptions support
configure:2199: CC -c -g  conftest.cpp 1>&5
configure:2217: checking if exceptions specification works
configure:2226: CC -c -g  conftest.cpp 1>&5
configure:2242: checking if return is required after throw
configure:2257: CC -c -g  conftest.cpp 1>&5
configure:2288: checking for native <string> header with basic_string defined 
configure:2304: CC -c -g  conftest.cpp 1>&5
configure:2322: checking for native <stdexcept> header
configure:2346: CC -c -g  conftest.cpp 1>&5
"configure", line 2336: Error: Use ";" to terminate declarations.
"configure", line 2336: Error: A declaration was expected instead of "or".
"configure", line 2336: Error: Multiple declaration for s.
3 Error(s) detected.
configure: failed program was:
#line 2324 "configure"
#include "confdefs.h"

     #include <stdexcept>
     # if !defined (__STL_HAS_NO_NAMESPACES)
       using namespace std;
     # endif
     string s;
     logic_error le(s);
     runtime_error re(s);
     domain_error de(s);
     invalid_argument ia(s);
     length_error lne(s);
     out_of_range or(s);
     range_error rne(s);
     overflow_error ove(s);
     underflow_error ue(s);
    
int main() {

; return 0; }
configure:2363: checking for new iostreams
configure:2385: CC -c -g  conftest.cpp 1>&5
"configure", line 2380: Warning: String literal converted to char* in formal argument str in call to outp<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>>&, char*).
1 Warning(s) detected.
configure:2404: checking for <exception> header with class exception defined
configure:2420: CC -c -g  conftest.cpp 1>&5
configure:2437: checking builtin constructor bug
configure:2496: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
__1c2e4CiiB_6FrknFClass3CTACi__3_i_ is out-of-date and will be regenerated
__1cDstdDfoo4Ci_6FTAi_v_ is out-of-date and will be regenerated
configure:2514: checking for trivial constructor bug
configure:2525: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
__1c2e4CiiB_6FrknFClass3CTACi__3_i_ is out-of-date and will be regenerated
__1cDstdDfoo4Ci_6FTAi_v_ is out-of-date and will be regenerated
configure:2541: checking for trivial destructor bug
configure:2553: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
__1c2e4CiiB_6FrknFClass3CTACi__3_i_ is out-of-date and will be regenerated
__1cDstdDfoo4Ci_6FTAi_v_ is out-of-date and will be regenerated
configure:2569: checking for explicit function template arguments
configure:2588: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
__1c2e4CiiB_6FrknFClass3CTACi__3_i_ is out-of-date and will be regenerated
__1cDstdDfoo4Ci_6FTAi_v_ is out-of-date and will be regenerated
configure:2604: checking for template parameter baseclass matching
configure:2642: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
__1c2e4CiiB_6FrknFClass3CTACi__3_i_ is out-of-date and will be regenerated
__1cDstdDfoo4Ci_6FTAi_v_ is out-of-date and will be regenerated
configure:2658: checking for non-template parameter baseclass matching 
configure:2692: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
__1c2e4CiiB_6FrknFClass3CTACi__3_i_ is out-of-date and will be regenerated
__1cDstdDfoo4Ci_6FTAi_v_ is out-of-date and will be regenerated
configure:2708: checking for nested type parameters bug
configure:2718: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
__1c2e4CiiB_6FrknFClass3CTACi__3_i_ is out-of-date and will be regenerated
__1cDstdDfoo4Ci_6FTAi_v_ is out-of-date and will be regenerated
configure:2735: checking if inherited template typedefs broken completely
configure:2776: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
__1c2e4CiiB_6FrknFClass3CTACi__3_i_ is out-of-date and will be regenerated
__1cDstdDfoo4Ci_6FTAi_v_ is out-of-date and will be regenerated
configure:2796: checking if inherited typedefs visible from outside
configure:2824: CC -c -g  conftest.cpp 1>&5
configure:2842: checking if private type static members initializable
configure:2855: CC -c -g  conftest.cpp 1>&5
configure:2872: checking for const member constructor bug
configure:2890: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
__1c2e4CiiB_6FrknFClass3CTACi__3_i_ is out-of-date and will be regenerated
__1cDstdDfoo4Ci_6FTAi_v_ is out-of-date and will be regenerated
configure:2906: checking for loop inline problems
configure:2916: CC -c -g  conftest.cpp 1>&5
configure:2945: checking if arrow operator always get instantiated
configure:2968: CC -o conftest -g   conftest.cpp  1>&5
__1cGmt_foo4Ci_Hoperate4Cpc_6MrkTB_i_ is out-of-date and will be regenerated
__1cGpo_foo4Ci_6FrknBA3CTA__3_0_ is out-of-date and will be regenerated
__1c2e4CiiB_6FrknFClass3CTACi__3_i_ is out-of-date and will be regenerated
__1cDstdDfoo4Ci_6FTAi_v_ is out-of-date and will be regenerated
configure:2985: checking for pointer-to-member parameter bug
configure:3015: CC -c -g  conftest.cpp 1>&5
configure:3031: checking if bad_alloc defined in <new>
configure:3051: CC -c -g  conftest.cpp 1>&5
configure:3067: checking for __type_traits automatic specialization
configure:3079: CC -o conftest -g   conftest.cpp  1>&5
"configure", line 3071: Error: "," expected instead of "<".
"configure", line 3075:     Where: While instantiating "tt_foo<int>(const int&)".
"configure", line 3075:     Where: Instantiated from non-template code.
1 Error(s) detected.
configure: failed program was:
#line 3069 "configure"
#include "confdefs.h"
template <class T> int tt_foo(const T&) {
	typedef __type_traits<T> traits;
	return 0;
     }
int main() {
(void)tt_foo(5)
; return 0; }
